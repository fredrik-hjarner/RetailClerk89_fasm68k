MEM_DEBUG_1=$FF00000	; general debug register
MEM_DEBUG_2=$FF00002	; general debug register
MEM_VBLANKFLAG=$FF00004	; indicates whether vblank in-progess
MEM_VBLANK_COUNTER=$FF00006	; incremented at vblank - used for debug & RNG
MEM_MAINLOOP_COUNTER=$FF00008	; used for debug & RNG
MEM_FRAME_COUNTER=$FF0000A	; current frame - cycles from 0-59
MEM_CONTROL_HELD=$FF0000C	; store value of a held button
MEM_CONTROL_PRESSED=$FF0000E	; store value of a pressed button
MEM_GAME_STATE=$FF00010	; used to control the main loop flow
MEM_DIALOG_FLAGS=$FF00014	; used to manage dialogs
MEM_DIALOG_TEXT=$FF00018	; pointer to location of dialog text
MEM_DIALOG_VPD=$FF0001C	; pointer to VPD location to write text
MEM_PLAYER_SPRITE_ID=$FF00020	; sprite table id of player sprite
MEM_PLAYER_SPRITE_X=$FF00022	; virtual x position of the player
MEM_PLAYER_SPRITE_Y=$FF00024	; virtual y position of the player
MEM_PLAYER_SPRITE_PATTERN_INDEX=$FF00026	; index of pattern in VDP
MEM_PLAYER_SPRITE_DIRECTION=$FF00028	; which direction the player faces
MEM_PLAYER_SPRITE_FRAME=$FF0002A	; animation frame of player sprite
MEM_PLAYER_SPRITE_STEP_COUNTER=$FF0002C	; used to determine when to move
MEM_NPC1_SPRITE_ID=$FF0002E	; sprite table id of NPC1 sprite
MEM_NPC1_SPRITE_X=$FF00030	; virtual x position of NPC1 sprite
MEM_NPC1_SPRITE_Y=$FF00032	; virtual y position of NPC1 sprite
MEM_NPC1_SPRITE_PATTERN_INDEX=$FF00034	; index of pattern in VDP
MEM_NPC1_SPRITE_DIRECTION=$FF00036	; which direction NPC1 faces
MEM_NPC1_SPRITE_FRAME=$FF00038	; animation frame of NPC1 sprite
MEM_NPC1_SPRITE_STEP_COUNTER=$FF0003A	; used to determine when to move
MEM_NPC1_MOVEMENT_COUNTER=$FF0003C	; used to determine how far to move
MEM_NPC1_MOVEMENT_INDEX=$FF0003E	; used to determine which direction to move
MEM_ACTIVE_SPRITE_LEFT_COLUMN=$FF00040	; left column of active sprite
MEM_ACTIVE_SPRITE_HIGH_LEFT=$FF00042	; high left row of active sprite
MEM_ACTIVE_SPRITE_LOW_LEFT=$FF00044	; low left row of active sprite
MEM_ACTIVE_SPRITE_RIGHT_COLUMN=$FF00046	; right column of active sprite
MEM_ACTIVE_SPRITE_HIGH_RIGHT=$FF00048	; high right row of active sprite
MEM_ACTIVE_SPRITE_LOW_RIGHT=$FF0004A	; low right row of active sprite
MEM_COLLISION_MAP_ROW=$FF0004C	; row of map data
MEM_COLLISION_RESULT=$FF00050	; result of collision test
MEM_MAP_POSITION_X=$FF00052	; x position of the map
MEM_MAP_POSITION_Y=$FF00054	; y position of the map
MEM_FLAG_MAP_POSITION_CHANGED=$FF00056	; >0 if map position changed
MEM_ACTION_TARGET_OBJID=$FF00058	; action target object id
MEM_OBJECT_LIST_OBJS=$FF0005A	; list of objects in current map
MEM_OBJECT_LIST_NPCS=$FF00096	; list of npcs in current map
MEM_COLLISION_DATA=$FF000D2	; collision data for the current map
