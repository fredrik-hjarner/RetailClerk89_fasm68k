SceneNShack:

	;---------------------------------------------------------------------------
	; scene ID
	;---------------------------------------------------------------------------
	dc.w	SCENE_ID_NSHACK

	;---------------------------------------------------------------------------
	; tiles
	;---------------------------------------------------------------------------
	dc.w	$0006	; tileset count - 1

	; tileset 0
	dc.l	TransparentTileStart
	dc.l	TransparentTileEnd

	; tileset 1
	dc.l	SimpleTileFloorTilesStart	; start of left side floor tiles
	dc.l	SimpleTileFloorTilesEnd	; end of left side floor tiles

	; tileset 2
	dc.l	SideStoreEntranceSquareTilesStart	; start of side entrance tiles
	dc.l	SideStoreEntranceSquareTilesEnd	; end of side entrance tiles

	; tileset 3
	dc.l	StoreFrameTilesStart	; start of frame tiles
	dc.l	StoreFrameTilesEnd	; end of frame tiles

	; tileset 4
	dc.l	AccentedCounterTilesStart	; start of counter tiles
	dc.l	AccentedCounterTilesEnd	; end of counter tiles

	; tileset 5
	dc.l	CounterShelvesAltTilesStart	; start of counter shelf tiles
	dc.l	CounterShelvesAltTilesEnd	; end of counter shelf tiles

	; tileset 6
	dc.l	NShackSceneryTilesStart	; start of scenery tiles
	dc.l	NShackSceneryTilesEnd	; end of scenery tiles

	;---------------------------------------------------------------------------
	; palettes
	;---------------------------------------------------------------------------
	dc.w	$0004	; four palettes
	dc.l	Store0EPalettes	; start of first palette to load

	;---------------------------------------------------------------------------
	; scenery
	;---------------------------------------------------------------------------
	dc.w	$0010	; scenery count - 1

	; floor
	dc.l	PatternTileFloorSimple
	; 		%pccvhnnnnnnnnnnn
	dc.w	 0000000000000001b	; base pattern
	dc.w	$000D	; repeat 14 times
	dc.l	VDP_VRAM_WRITE_B	; initial drawing location

	; left entrance - top
	dc.l	PatternSideEntranceLeft
	; 		%pccvhnnnnnnnnnnn
	dc.w	 1000000000000011b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A	; initial drawing location

	; left entrance - bottom
	dc.l	PatternSideEntranceLeft
	; 		%pccvhnnnnnnnnnnn
	dc.w	 1000000000000011b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A+$09000000	; initial drawing location

	; south wall
	dc.l	PatternFrameSouthClosed
	; 		%pccvhnnnnnnnnnnn
	dc.w	 1000000000001101b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A+$0D800000	; initial drawing location

	; right side
	dc.l	PatternSideClosed
	; 		%pccvhnnnnnnnnnnn
	dc.w	 1000000000001101b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A+$00800000+$004E0000	; initial drawing location

	; top
	dc.l	PatternFrameTop
	; 		%pccvhnnnnnnnnnnn
	dc.w	 1000000000001000b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A	; initial drawing location

	; shelves under counter
	dc.l	Pattern3Tile80x8	; location of pattern to load
	; 		%pccvhnnnnnnnnnnn
	dc.w	 0000000000011111b	; base pattern
	dc.w	$0001	; repeat 1 time
	dc.l	VDP_VRAM_WRITE_B+$001E0000+$04000000	; initial drawing location

	; counter
	dc.l	PatternCounterHigh80x16
	; 		%pccvhnnnnnnnnnnn
	dc.w	 1000000000010101b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A+$001E0000+$02800000	; initial drawing location

	dc.l	PatternCounterLow80x16
	; 		%pccvhnnnnnnnnnnn
	dc.w	 0000000000010101b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A+$001E0000+$03800000	; initial drawing location

	; display cases
	dc.l	PatternNShackDisplayCaseHigh
	; 		%pccvhnnnnnnnnnnn
	dc.w	 1010000000100010b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A+$00020000+$02000000	; initial drawing location

	dc.l	PatternNShackDisplayCaseLow
	; 		%pccvhnnnnnnnnnnn
	dc.w	 0010000000100010b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A+$00020000+$02800000	; initial drawing location

	dc.l	PatternNShackDisplayCaseHigh
	; 		%pccvhnnnnnnnnnnn
	dc.w	 1010000000100010b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A+$00320000+$02000000	; initial drawing location

	dc.l	PatternNShackDisplayCaseLow
	; 		%pccvhnnnnnnnnnnn
	dc.w	 0010000000100010b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A+$00320000+$02800000	; initial drawing location

	; barrels
	dc.l	Pattern32x32
	; 		%pccvhnnnnnnnnnnn
	dc.w	 0100000001011101b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A+$00320000+$07000000	; initial drawing location

	dc.l	Pattern32x32
	; 		%pccvhnnnnnnnnnnn
	dc.w	 0100000001011101b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A+$00400000+$07000000	; initial drawing location

	dc.l	Pattern32x32
	; 		%pccvhnnnnnnnnnnn
	dc.w	 0100000001011101b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A+$00160000+$07000000	; initial drawing location

	dc.l	Pattern32x32
	; 		%pccvhnnnnnnnnnnn
	dc.w	 0100000001011101b	; base pattern
	dc.w	$0000	; no repeat
	dc.l	VDP_VRAM_WRITE_A+$00080000+$07000000	; initial drawing location

	;---------------------------------------------------------------------------
	; text
	;---------------------------------------------------------------------------
	dc.w	$FFFF	; text count

	;---------------------------------------------------------------------------
	; objects
	;---------------------------------------------------------------------------
	dc.w	OBJ_LIST_LENGTH-1	; object count

	dc.w	OBJ_SCENE_NUTCASE
	; 		%wwwwwwwxxxxxxxxx
	dc.w	 1110000010001000b
	; 		%hhhhhhhyyyyyyyyy
	dc.w	 0100100010100100b

	dc.w	OBJ_SCENE_NUTCASE
	; 		%wwwwwwwxxxxxxxxx
	dc.w	 1110000101001010b
	; 		%hhhhhhhyyyyyyyyy
	dc.w	 0100100010100100b

	dc.w	OBJ_SCENE_NUTBARREL
	; 		%wwwwwwwxxxxxxxxx
	dc.w	 0011000010100000b
	; 		%hhhhhhhyyyyyyyyy
	dc.w	 0011000011110000b

	dc.w	OBJ_SCENE_NUTBARREL
	; 		%wwwwwwwxxxxxxxxx
	dc.w	 0011000011011000b
	; 		%hhhhhhhyyyyyyyyy
	dc.w	 0011000011110000b

	dc.w	OBJ_SCENE_NUTBARREL
	; 		%wwwwwwwxxxxxxxxx
	dc.w	 0011000101001000b
	; 		%hhhhhhhyyyyyyyyy
	dc.w	 0011000011110000b

	dc.w	OBJ_SCENE_NUTBARREL
	; 		%wwwwwwwxxxxxxxxx
	dc.w	 0011000110000000b
	; 		%hhhhhhhyyyyyyyyy
	dc.w	 0011000011110000b

	dc.w	OBJ_NPC_NSHACK_STAFF
	; 		%wwwwwwwxxxxxxxxx
	dc.w	 0011000100010100b
	; 		%hhhhhhhyyyyyyyyy
	dc.w	 0100100010100100b

	dc.w	OBJ_SCENE_COUNTER
	; 		%wwwwwwwxxxxxxxxx
	dc.w	 1010000011111000b
	; 		%hhhhhhhyyyyyyyyy
	dc.w	 0100100010100100b

	dc.w	OBJ_NOTHING
	; 		%wwwwwwwxxxxxxxxx
	dc.w	 0000000000000000b
	; 		%hhhhhhhyyyyyyyyy
	dc.w	 0000000000000000b

	dc.w	OBJ_NOTHING
	; 		%wwwwwwwxxxxxxxxx
	dc.w	 0000000000000000b
	; 		%hhhhhhhyyyyyyyyy
	dc.w	 0000000000000000b

	;---------------------------------------------------------------------------
	; collision data
	;---------------------------------------------------------------------------
	dc.w	DEFAULT_COLLISION_DATA_SIZE	; collision data size
	
	dc.l	MapStore0ECollision	; location of collision data

	;---------------------------------------------------------------------------
	; exits
	;---------------------------------------------------------------------------
	dc.w	$FFFF	; south exit
	dc.w	$FFFF	; north exit
	dc.w	SCENE_ID_SHALL	; west exit
	dc.w	$FFFF	; east exit

	;---------------------------------------------------------------------------
	; NPC locations
	;---------------------------------------------------------------------------
	dc.w	$0002	; thee npc slots

	dc.w	$0118	; starting x location of npc0
	dc.w	$0098	; starting y location of npc0
	dc.w	DIRECTION_DOWN	; starting direction of npc0
	dc.w	$0000	; movement frequency of npc0
	dc.l	NPCMovementDownStart	; location of movement pattern for npc0
	dc.w	(NPCMovementDownEnd-NPCMovementDownStart-1)	; pattern length

	dc.w	$0100	; starting x location of npc1
	dc.w	$00B8	; starting y location of npc1
	dc.w	DIRECTION_UP	; starting direction of npc1
	dc.w	$0000	; movement frequency of npc1
	dc.l	NPCMovementUpStart	; location of movement pattern for npc1
	dc.w	(NPCMovementUpEnd-NPCMovementUpStart-1)	; pattern length

	dc.w	$0136	; starting x location of npc2
	dc.w	$00B8	; starting y location of npc2
	dc.w	DIRECTION_UP	; starting direction of npc2
	dc.w	$0000	; movement frequency of npc2
	dc.l	NPCMovementUpStart	; location of movement pattern for npc2
	dc.w	(NPCMovementUpEnd-NPCMovementUpStart-1)	; pattern length

	;---------------------------------------------------------------------------
	; bgm
	;---------------------------------------------------------------------------
	dc.l	BGM_Store0	; location of background music

